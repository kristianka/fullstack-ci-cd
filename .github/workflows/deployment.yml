name: Deployment pipeline

on:
  push:
    branches:
      - main

  pull_request:
    branches: [main]
    types: [opened, synchronize]
      
env: 
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  TEST_MONGODB_URI: ${{secrets.TEST_MONGODB_URI}}
  SECRET: ${{ secrets.SECRET }}
  PORT: ${{ secrets.PORT }}

jobs:
    deployment_pipeline:
        runs-on: ubuntu-20.04
        steps:
          - uses: actions/checkout@v3
          - uses: actions/setup-node@v3
            with:
                node-version: '16'

          - name: Install dependencies for frontend
            run: npm install

          - name: Install dependencies for backend
            run: cd blog_frontend && npm install

          - name: Check styles
            run: npm run lint && cd blog_frontend && npm run lint && cd ..

          - name: Build
            run: cd blog_frontend && npm run build

          - name: Run backend tests
            run: npm test -- tests/blog_api.test.js
          
          - name: Run frontend tests
            run: cd blog_frontend && npm run test && cd ..

          - name: e2e tests
            uses: cypress-io/github-action@v5
            with:
              start: npm run start:test          
              working-directory: blog_frontend  
              command: npm run cy:e2e
              wait-on: http://localhost:3001

    
    # deploy:
    #   name: Deploy to Render
    #   needs: deployment_pipeline
    #   runs-on: ubuntu-latest
    #   if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip')}}
    #   steps:
    #     - name: Trigger deployment
    #       run: curl ${{ secrets.RENDER_DEPLOY_URL }}


    tag_release:
      runs-on: ubuntu-latest
      needs: deployment_pipeline
      if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') }}
      steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-node@v3
        - uses: anothrNick/github-tag-action@1.67.0
        
          name: Bump version and push tag
          env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            DEFAULT_BUMP: patch
    
    # notify_discord_success:
    #   name: Discord Webhook Notify - Success
    #   runs-on: ubuntu-latest
    #   needs: tag_release
    #   if: ${{ github.event_name == 'push' && success() && !contains(github.event.head_commit.message, '#skip') }}
    #   steps:
    #     - uses: rjstone/discord-webhook-notify@v1.0.4
    #       with:
    #         webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
    #         severity: 'info'
    #         details: 'New version successfully deployed :3'

    # notify_discord_failure:
    #   name: Discord Webhook Notify - Failure
    #   runs-on: ubuntu-latest
    #   needs: deployment_pipeline
    #   if: ${{ github.event_name == 'push' && failure() && !contains(github.event.head_commit.message, '#skip') }}
    #   steps:
    #     - uses: rjstone/discord-webhook-notify@v1.0.4
    #       with:
    #         webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
    #         severity: 'error'
    #         details: 'Build or deployment failed :('
